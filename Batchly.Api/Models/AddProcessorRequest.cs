/*
 * Batchly.Api
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 09/19/2016
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Batchly.Api;

namespace Batchly.Api.Models
{
    public class AddProcessorRequest : INotifyPropertyChanged 
    {
        // These fields hold the values for the public properties.
        private string accountId;
        private OperatingSystemEnum operatingSystem;
        private LanguageEnum language;
        private string fileName;
        private string className;
        private RequestTypeEnum requestType;
        private ResponseTypeEnum responseType;
        private string packageLocation;
        private List<Parameter> parameters;
        private CustomImage customImage;
        private string name;
        private string logoLocation;

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("AccountId")]
        public string AccountId 
        { 
            get 
            {
                return this.accountId; 
            } 
            set 
            {
                this.accountId = value;
                onPropertyChanged("AccountId");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("OperatingSystem", ItemConverterType = typeof(StringValuedEnumConverter))]
        public OperatingSystemEnum OperatingSystem 
        { 
            get 
            {
                return this.operatingSystem; 
            } 
            set 
            {
                this.operatingSystem = value;
                onPropertyChanged("OperatingSystem");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("Language", ItemConverterType = typeof(StringValuedEnumConverter))]
        public LanguageEnum Language 
        { 
            get 
            {
                return this.language; 
            } 
            set 
            {
                this.language = value;
                onPropertyChanged("Language");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("FileName")]
        public string FileName 
        { 
            get 
            {
                return this.fileName; 
            } 
            set 
            {
                this.fileName = value;
                onPropertyChanged("FileName");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("ClassName")]
        public string ClassName 
        { 
            get 
            {
                return this.className; 
            } 
            set 
            {
                this.className = value;
                onPropertyChanged("ClassName");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("RequestType", ItemConverterType = typeof(StringValuedEnumConverter))]
        public RequestTypeEnum RequestType 
        { 
            get 
            {
                return this.requestType; 
            } 
            set 
            {
                this.requestType = value;
                onPropertyChanged("RequestType");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("ResponseType", ItemConverterType = typeof(StringValuedEnumConverter))]
        public ResponseTypeEnum ResponseType 
        { 
            get 
            {
                return this.responseType; 
            } 
            set 
            {
                this.responseType = value;
                onPropertyChanged("ResponseType");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("PackageLocation")]
        public string PackageLocation 
        { 
            get 
            {
                return this.packageLocation; 
            } 
            set 
            {
                this.packageLocation = value;
                onPropertyChanged("PackageLocation");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("Parameters")]
        public List<Parameter> Parameters 
        { 
            get 
            {
                return this.parameters; 
            } 
            set 
            {
                this.parameters = value;
                onPropertyChanged("Parameters");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("CustomImage")]
        public CustomImage CustomImage 
        { 
            get 
            {
                return this.customImage; 
            } 
            set 
            {
                this.customImage = value;
                onPropertyChanged("CustomImage");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("Name")]
        public string Name 
        { 
            get 
            {
                return this.name; 
            } 
            set 
            {
                this.name = value;
                onPropertyChanged("Name");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("LogoLocation")]
        public string LogoLocation 
        { 
            get 
            {
                return this.logoLocation; 
            } 
            set 
            {
                this.logoLocation = value;
                onPropertyChanged("LogoLocation");
            }
        }

        /// <summary>
        /// Property changed event for observer pattern
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// Raises event when a property is changed
        /// </summary>
        /// <param name="propertyName">Name of the changed property</param>
        protected void onPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
} 